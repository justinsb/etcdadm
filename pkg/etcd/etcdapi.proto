syntax = "proto3";
package etcd;

service EtcdManagerService {
    // GetInfo gets info about the node
    rpc GetInfo (GetInfoRequest) returns (GetInfoResponse);

    // JoinCluster requests that the node join an existing cluster
    rpc JoinCluster (JoinClusterRequest) returns (JoinClusterResponse);
}

message GetInfoRequest {
}

message GetInfoResponse {
    string node_name = 1;

    repeated EtcdCluster clusters = 2;
}

message JoinClusterRequest {
    EtcdCluster cluster = 1;
}

message JoinClusterResponse {
    EtcdNode node = 1;
}

message EtcdCluster {
    int32 desired_cluster_size = 1;

    int32 peer_port = 2;
    int32 client_port = 3;
    string cluster_name = 4;
    string cluster_token = 5;

    EtcdNode me = 6;
    repeated EtcdNode nodes = 7;
}

message EtcdNode {
    string name = 1;
    repeated string peer_urls = 2;
    repeated string client_urls = 3;
}
