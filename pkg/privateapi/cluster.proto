syntax = "proto3";
package privateapi;

option go_package = "kope.io/etcd-manager/pkg/privateapi";

service ClusterService {
    // Ping just pings another node, part of the discovery protocol
    rpc Ping (PingRequest) returns (PingResponse);

    // LeaderNotification is sent by a node that (thinks it) is the leader
    rpc LeaderNotification (LeaderNotificationRequest) returns (LeaderNotificationResponse);

    // ViewExchange performs a view exchange of all nodes
//    rpc ViewExchange (ViewExchangeRequest) returns (ViewExchangeResponse);
}

message PingRequest {
    PeerInfo info = 1;
}

message PingResponse {
    PeerInfo info = 1;
}

message PeerInfo {
    string id = 1;
    repeated string endpoints = 2;
}

//message ViewExchangeRequest {
//    View view = 1;
//    uint64 view_hash = 2;
//}
//
//message ViewExchangeResponse {
//    View view = 1;
//    uint64 view_hash = 2;
//}

message View {
    PeerInfo leader = 1;
    string leadership_token = 2;

    repeated PeerInfo healthy = 3;
//    repeated PeerInfo unhealthy = 2;
}

message LeaderNotificationRequest {
    View view = 1;
}

message LeaderNotificationResponse {
    // True if this node acknowledges the new leader
    bool accepted = 1;

    // If the node has a different (bigger) view, it rejects the leadership bid and sends the view
    View view = 2;
}